/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as LayoutImport } from "./routes/_layout"
import { Route as LayoutAboutImport } from "./routes/_layout/about"
import { Route as LayoutAccessImport } from "./routes/_layout/access"
import { Route as LayoutAdminImport } from "./routes/_layout/admin"
import { Route as LayoutDataImport } from "./routes/_layout/data"
import { Route as LayoutIndexImport } from "./routes/_layout/index"
import { Route as LayoutSearchImport } from "./routes/_layout/search"
import { Route as LayoutSettingsImport } from "./routes/_layout/settings"
import { Route as LayoutUniprotUniprotAccImport } from "./routes/_layout/uniprot/$uniprotAcc"
import { Route as LoginImport } from "./routes/login"
import { Route as RecoverPasswordImport } from "./routes/recover-password"
import { Route as ResetPasswordImport } from "./routes/reset-password"

// Create/Update Routes

const ResetPasswordRoute = ResetPasswordImport.update({
  path: "/reset-password",
  getParentRoute: () => rootRoute,
} as any)

const RecoverPasswordRoute = RecoverPasswordImport.update({
  path: "/recover-password",
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: "/login",
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: "/_layout",
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: "/",
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  path: "/settings",
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSearchRoute = LayoutSearchImport.update({
  path: "/search",
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDataRoute = LayoutDataImport.update({
  path: "/data",
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAdminRoute = LayoutAdminImport.update({
  path: "/admin",
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAccessRoute = LayoutAccessImport.update({
  path: "/access",
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  path: "/about",
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUniprotUniprotAccRoute = LayoutUniprotUniprotAccImport.update({
  path: "/uniprot/$uniprotAcc",
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_layout": {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    "/login": {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    "/recover-password": {
      preLoaderRoute: typeof RecoverPasswordImport
      parentRoute: typeof rootRoute
    }
    "/reset-password": {
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    "/_layout/about": {
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    "/_layout/access": {
      preLoaderRoute: typeof LayoutAccessImport
      parentRoute: typeof LayoutImport
    }
    "/_layout/admin": {
      preLoaderRoute: typeof LayoutAdminImport
      parentRoute: typeof LayoutImport
    }
    "/_layout/data": {
      preLoaderRoute: typeof LayoutDataImport
      parentRoute: typeof LayoutImport
    }
    "/_layout/search": {
      preLoaderRoute: typeof LayoutSearchImport
      parentRoute: typeof LayoutImport
    }
    "/_layout/settings": {
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    "/_layout/": {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    "/_layout/uniprot/$uniprotAcc": {
      preLoaderRoute: typeof LayoutUniprotUniprotAccImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutAboutRoute,
    LayoutAccessRoute,
    LayoutAdminRoute,
    LayoutDataRoute,
    LayoutSearchRoute,
    LayoutSettingsRoute,
    LayoutIndexRoute,
    LayoutUniprotUniprotAccRoute,
  ]),
  LoginRoute,
  RecoverPasswordRoute,
  ResetPasswordRoute,
])

/* prettier-ignore-end */
